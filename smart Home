#include <SoftwareSerial.h>
SoftwareSerial mySerial(12, 14); //SIM800L Tx & Rx is connected to Arduino #3 & #2
 int sensorPin = A0;  // select the input pin for the CO sensor  
 int co = 0;
#include <Servo.h>
Servo srituhobby;
Servo myservo;
#include <DHT.h>
#include <DHT_U.h>
DHT dht(4,DHT11);
int temp;
int hum;
int thresholdHumidity= 40;
const int relayPin = 10;
const int flameSensorPin = 5; // Analog input 0
const int buzzerPin = 13;
void setup() {
  dht.begin();
  Serial.begin(9600);
  mySerial.begin(9600);

  Serial.println("Initializing..."); 
  delay(1000);

  mySerial.println("AT"); //Once the handshake test is successful, it will back to OK
  updateSerial();
  mySerial.println("AT+CMGF=1"); // Configuring TEXT mode
  updateSerial();
 mySerial.println("AT+CMGS=\"+201091815711""");//change ZZ with country code and xxxxxxxxxxx with phone number to sms
  updateSerial();
  mySerial.print("Last Minute Engineers | lastminuteengineers.com"); //text
  updateSerial();
  mySerial.write(26);
   srituhobby.attach(16);
myservo.attach(2);
  pinMode(relayPin, OUTPUT);
pinMode(flameSensorPin, INPUT);
}

void loop() {
  float co; 
co = analogRead(sensorPin);  
 int coLevel = map(co, 0, 1023, 0, 100);
  Serial.println("sensor value = ");
Serial.print(coLevel);
Serial.println("%"); 
 delay(2000);
 temp= dht.readTemperature();
  hum=dht.readHumidity()  ;
  Serial.print("temperature:");
  Serial.print(temp);
  Serial.print("humidity");
  Serial.print(hum);
  Serial.println("%"); 
  if (coLevel>=2) {
    mySerial.print("co leakage!"); //text content
     srituhobby.write(0);
  delay(1000);
  srituhobby.write(180);
  delay(1000);
myservo.write(0);
  delay(6000);
  myservo.write(180);
  delay(6000);}
  else
  if (hum > thresholdHumidity) {
    mySerial.print("humidity increases!"); //text content
    // Open the fan (connect the relay to VCC)
    digitalWrite(relayPin, LOW);
    Serial.println("Fan is on");
  } else {
    Serial.println("No");}
    // Close the fan (disconnect the relay from VCC)
    digitalWrite(relayPin, HIGH);
    Serial.println("Fan is off");
  }

  // Wait for 10 seconds before taking the next reading
  delay(1000);
  int sensorValue = analogRead(flameSensorPin);
  Serial.print("sensorValue IS:");
Serial.print(sensorValue);
  // Check if the flame is detected (adjust this value based on your specific sensor)
  if (sensorValue > 500) { // adjust this value based on your specific sensor
    mySerial.print("fire on way!"); //text content
    Serial.println("Flame detected!");
    digitalWrite(buzzerPin, HIGH);
  delay(500);
  digitalWrite(buzzerPin, LOW);
    // Send a message to the server to indicate that the flame is detected
  } else {
    Serial.println("No flame detected");
  }
}

void updateSerial()
{
  delay(500);
  while (Serial.available()) 
  {
    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port
  }
  while(mySerial.available()) 
  {
    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port
  }
}}
